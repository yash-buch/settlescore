package com.binc.settlescore.core.executors

import java.util.concurrent.ExecutorService

class ThreadPoolManager {
    companion object {
        lateinit var instance: ThreadPoolManager
    }

    init {
        instance = this
    }

    private var priorityExecutor: ExecutorService? = null
    private var ordinaryExecutor: ExecutorService? = null

    fun ThreadPoolManager(): ThreadPoolManager {
        return instance
    }

    fun executeOnPriority(snippet: Runnable) {
        priorityExecutor?.execute(snippet) ?: buildPriorityExecutor()?.execute(snippet)
    }

    fun execute(snippet: Runnable) {
        ordinaryExecutor?.execute(snippet) ?: buildOrinaryExecutor()?.execute(snippet)
    }

    fun buildPriorityExecutor(): ExecutorService? {
        priorityExecutor = java.util.concurrent.Executors.newFixedThreadPool(5, PriorityThreadFactory())
        return priorityExecutor
    }

    fun buildOrinaryExecutor(): ExecutorService? {
        ordinaryExecutor = java.util.concurrent.Executors.newFixedThreadPool(5, OrdinaryThreadFactory())
        return ordinaryExecutor
    }
}

